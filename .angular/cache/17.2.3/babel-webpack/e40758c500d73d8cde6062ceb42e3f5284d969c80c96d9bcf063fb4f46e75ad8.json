{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ContactComponent = class ContactComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.contactForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      subject: ['', Validators.required],\n      message: ['', [Validators.required, Validators.minLength(20)]]\n    });\n  }\n  get f() {\n    return this.contactForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.contactForm.invalid) {\n      return;\n    }\n    // In a real app, this would send data to a service\n    console.log('Form submitted:', this.contactForm.value);\n    // Reset form with success message\n    this.contactForm.reset();\n    this.submitted = false;\n    alert('Thank you for your message. We will get back to you soon!');\n  }\n};\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})], ContactComponent);\nexport { ContactComponent };","map":{"version":3,"names":["Component","Validators","ContactComponent","constructor","fb","submitted","ngOnInit","contactForm","group","name","required","minLength","email","subject","message","f","controls","onSubmit","invalid","console","log","value","reset","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Copilot_Agent\\AroundWhitefield\\src\\app\\contact\\contact.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  contactForm!: FormGroup;\r\n  submitted = false;\r\n  \r\n  constructor(private fb: FormBuilder) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.contactForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      subject: ['', Validators.required],\r\n      message: ['', [Validators.required, Validators.minLength(20)]]\r\n    });\r\n  }\r\n  \r\n  get f() { \r\n    return this.contactForm.controls; \r\n  }\r\n  \r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    \r\n    if (this.contactForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n    // In a real app, this would send data to a service\r\n    console.log('Form submitted:', this.contactForm.value);\r\n    \r\n    // Reset form with success message\r\n    this.contactForm.reset();\r\n    this.submitted = false;\r\n    alert('Thank you for your message. We will get back to you soon!');\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,SAAS,GAAG,KAAK;EAEqB;EAEtCC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MAClCI,OAAO,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEA,IAAII,CAACA,CAAA;IACH,OAAO,IAAI,CAACR,WAAW,CAACS,QAAQ;EAClC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACZ,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACE,WAAW,CAACW,OAAO,EAAE;MAC5B;IACF;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;IAEtD;IACA,IAAI,CAACd,WAAW,CAACe,KAAK,EAAE;IACxB,IAAI,CAACjB,SAAS,GAAG,KAAK;IACtBkB,KAAK,CAAC,2DAA2D,CAAC;EACpE;CACD;AAlCYrB,gBAAgB,GAAAsB,UAAA,EAL5BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWzB,gBAAgB,CAkC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}